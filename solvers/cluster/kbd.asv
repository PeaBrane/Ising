function [list,clus] = kbd(v,W,beta,g)

w = get_ww(W); sz = size(w); w = get_frus(v,w);
n = sz(1); m = sz(2);
a = (1-exp(-4*beta))*g; b = 1-exp(-4*beta);

shade = 0;
% shade = round(rand());
wp = wp_to_w(w,shade,1); wp = (wp==-1);
blist = floor(b+rand(n,m)); 
alist = floor(g+rand(n,m))&blist; blist = blist-alist;


for i = 1:n
for j = 1:m  
flag = (~mod(i+j,2) && ~shade) || (mod(i+j,2) && shade);
if flag
    
p = wp(i,j,:); e = find(p == -1); 
if length(e) ~= 1
wp(i,j,:) = zeros(1,4);
continue;
end

pp = zeros(1,4); x = rand();
if x <= a
ind = mod(e+[0 2],4)+1;
elseif (x > a) && (x <= b)
ind = mod(e+[0 1]+round(rand()),4)+1;
end
pp(ind) = 1; wp(i,j,:) = pp;

end
end
end
w = wp_to_w(wp,shade,0);

G = get_G(w);
[bins,binsizes] = conncomp(G);
if isempty(binsizes)
    list = 0; clus = 0;
    return;
end
cdf = to_cdf(binsizes);
bin = cdf_sample(cdf);
list = find(bins == bin);
clus = length(list)/prod(sz(1:end-1));

end